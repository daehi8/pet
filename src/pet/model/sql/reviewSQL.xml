<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
	<insert id="insertReview" parameterType="reviewDTO">
		insert into review(
			no,
			member_email,
			hospital_name,
			doc_name,
			revisit,
			public_check,
			reg_date
		)values(
			review_seq.nextval,
			#{member_email},
			#{hospital_name},
			#{doc_name},
			#{revisit},
			#{public_check},
			sysdate
		)	
	</insert>
	
	<select id="selectNewNo" resultType="int">
		select max(no) from review
	</select>
	
	<select id="getListReview" parameterType="hashMap" resultType="reviewDTO">
		select no,member_email,hospital_name,doc_name,revisit,public_check,auth_check,reg_date,r 
		from (select no,member_email,hospital_name,doc_name,revisit,public_check,auth_check,reg_date,rownum r 
		from (select * 
		from (select review.no,member_email,hospital_name,doc_name,revisit,public_check,auth_check,reg_date,mean 
		from review join review_rating on review.no = review_rating.review_no) 
		order by 
		<choose>
		<when test="searchType == 'ratingOrder'">mean desc</when> 
		<otherwise>reg_date desc</otherwise>
		</choose>
		) 
		where 
		hospital_name = #{hospital_name} and auth_check = 'Y' and public_check = 'Y')
		<![CDATA[where r >= #{start} and r <= #{end}]]>
	</select>
	
	<select id="getListReviewCount" resultType="int">
		select count(*) from review where hospital_name = #{hospital_name} and auth_check = 'Y' and public_check = 'Y'
	</select>
	
	<select id="getRecomCount" parameterType="String" resultType="int">
		select count(revisit) from review where revisit = 'Y' and hospital_name = #{value}
	</select>
	
	<select id="getNotRecomCount" parameterType="String" resultType="int">
		select count(revisit) from review where revisit = 'N' and hospital_name = #{value}
	</select>
	
	<select id="getListAuthCheckReview" parameterType="hashMap" resultType="reviewDTO">
		select no,member_email,hospital_name,doc_name,revisit,public_check,auth_check,reg_date,r from 
		(select no,member_email,hospital_name,doc_name,revisit,public_check,auth_check,reg_date,rownum r from 
		(select * from review order by 
		reg_date desc) 
		<where>
		<if test="searchType==null">and auth_check = 'N'</if>
		<if test="searchType=='no'">and auth_check = 'N'</if>
		<if test="searchType=='ok'">and auth_check = 'Y'</if>
		<if test="searchType=='cancle'">and auth_check = 'D'</if>
		</where>
		) 
		<![CDATA[where r >= #{start} and r <= #{end}]]>
	</select>
	
	<select id="getListAuthCheckReviewCount" resultType="int" parameterType="String">
		select count(*) from review 
		<where>
		<if test="searchType==null">and auth_check = 'N'</if>
		<if test="searchType=='no'">and auth_check = 'N'</if>
		<if test="searchType=='ok'">and auth_check = 'Y'</if>
		<if test="searchType=='cancle'">and auth_check = 'D'</if>
		</where>
	</select>
	
	<update id="okAuthCheck" parameterType="int">
		update review set auth_check = 'Y' where no = #{value}
	</update>
	
	<update id="noAuthCheck" parameterType="int">
		update review set auth_check = 'D' where no = #{value}
	</update>
	
	<select id="selectByReviewNo" parameterType="int" resultType="reviewDTO">
		select * from review where no = #{value}
	</select>
	
	<select id="selectByHospitalName" parameterType="String" resultType="pet.model.dto.DocMyHospitalDTO">
		select * from doc_myhospital where hospital_name = #{value}
	</select>
	
	<select id="getDocPicture" parameterType="String" resultType="pet.model.dto.DocPictureDTO">
		select * from (select * from
		(select * from doc_myhospital join doc_info on doc_myhospital.doc_no = doc_info.doc_no)
		join doc_picture on doc_no = doc_picture.doc_no) where hospital_name = #{value}
	</select>
	
	<select id="getDocInfo" parameterType="String" resultType="pet.model.dto.DocInfoDTO">
		select * from
		(select * from doc_myhospital join doc_info on doc_myhospital.doc_no = doc_info.doc_no)
		where hospital_name = #{value}
	</select>
</mapper>
